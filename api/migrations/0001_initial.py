# Generated by Django 2.1.1 on 2018-09-07 03:39

import api.models
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sdk_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='a camera identifier for the computer sdk')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='datetime camera was created')),
                ('magnification', models.FloatField(blank=True, default=1, null=True)),
                ('axis', models.CharField(blank=True, max_length=100, null=True, verbose_name='axis image was taken from')),
                ('pixel_size', models.FloatField(blank=True, default=1, null=True)),
                ('double_imaging', models.BooleanField(blank=True, default=False)),
                ('active', models.BooleanField(blank=True, default=True)),
            ],
            options={
                'ordering': ['-created', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Dataset name')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='datetime created')),
                ('notes', models.TextField(blank=True, default='', null=True, verbose_name='Dataset notes')),
                ('flag', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Dataset flags')),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=api.models.default_params, null=True, verbose_name='tags for the dataset')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='time created')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='image notes')),
                ('filepath', models.TextField(blank=True, null=True, verbose_name='filepath location for raw data on / in the MIT server')),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=api.models.default_params, null=True, verbose_name='tags for the image')),
                ('thumbnail', models.TextField(blank=True, null=True, verbose_name='filepath for an image thumbnail')),
                ('total_atoms', models.FloatField(blank=True, null=True, verbose_name='number of atoms in the image. Can be either from fitting or from pixel summing')),
                ('odpath', models.TextField(blank=True, null=True, verbose_name='filepath location for the od fits file on / in the MIT server')),
                ('atomsperpixel', models.TextField(blank=True, null=True, verbose_name='filepath location for the atoms per pixel on / in the MIT server')),
                ('cropi', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=api.models.default_params, null=True, verbose_name='cropi for the image')),
                ('atom', models.CharField(choices=[('Li', 'Lithium'), ('Na', 'Sodium'), ('K', 'Potassium')], default='Li', max_length=2, verbose_name='atom used in the imaging: eg Li, Na, K, etc ')),
                ('camera', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='images', to='api.Camera')),
            ],
            options={
                'ordering': ['-created', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='date lab was registered')),
                ('info', models.TextField(blank=True, null=True, verbose_name='detailed info about the lab')),
                ('photo', models.TextField(blank=True, null=True, verbose_name='filepath to the lab photo')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='project name')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='datetime created')),
                ('notes', models.TextField(blank=True, default='', null=True, verbose_name='project notes')),
                ('lab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='api.Lab')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='datetime object created. Could be different by a few sec from runtime')),
                ('runtime', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='datetime for expt run')),
                ('parameters', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=api.models.default_params, null=True, verbose_name='Variables and parameters')),
                ('bad_shot', models.BooleanField(blank=True, default=False, verbose_name='Was this run a bad shot?')),
                ('dataset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='runs', to='api.Dataset')),
                ('lab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='runs', to='api.Lab')),
            ],
            options={
                'ordering': ['-runtime'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='A short user description')),
                ('lab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userprofiles', to='api.Lab')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='image',
            name='run',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='images', to='api.Run'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='lab',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datasets', to='api.Lab'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datasets', to='api.Project'),
        ),
        migrations.AddField(
            model_name='camera',
            name='calibration_dataset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Dataset'),
        ),
    ]
